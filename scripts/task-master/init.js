#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Task Master
 * –°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª tasks.json, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
 */

const fs = require('fs');
const path = require('path');
const chalk = require('chalk');
const os = require('os');

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏
const homeDir = os.homedir();
const globalTasksDir = path.join(homeDir, '.task-master');

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ (–≤—Å–µ–≥–¥–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
const currentDir = process.cwd();
const localTasksDir = path.join(currentDir, 'tasks');
const localTasksFile = path.join(localTasksDir, 'tasks.json');

// –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
const isGlobalCommand = process.env.TASK_MASTER_MODE === 'global';

// –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ init, –º—ã —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
console.log(chalk.blue(`Task Master –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: ${currentDir}`));

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ tasks, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
function createTasksDir() {
  if (!fs.existsSync(localTasksDir)) {
    fs.mkdirSync(localTasksDir, { recursive: true });
    console.log(chalk.green(`‚úì –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ ${path.basename(localTasksDir)} –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ`));
  } else {
    console.log(chalk.yellow(`‚ö† –ü–∞–ø–∫–∞ ${path.basename(localTasksDir)} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ`));
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ tasks.json
function createTasksFile() {
  if (!fs.existsSync(localTasksFile)) {
    const template = {
      project: path.basename(currentDir),
      version: '1.0.0',
      tasks: []
    };
    
    fs.writeFileSync(localTasksFile, JSON.stringify(template, null, 2));
    console.log(chalk.green(`‚úì –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª ${path.basename(localTasksFile)} –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${localTasksDir}`));
  } else {
    console.log(chalk.yellow(`‚ö† –§–∞–π–ª ${path.basename(localTasksFile)} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${localTasksDir}`));
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ COPILOT-INTEGRATION.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è Copilot
function createCopilotIntegrationFile() {
  const copilotFile = path.join(currentDir, 'COPILOT-INTEGRATION.md');
  if (!fs.existsSync(copilotFile)) {
    const content = `# Task Master: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GitHub Copilot

Task Master –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å GitHub Copilot. –≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç, –∫–∞–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Task Master –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å Copilot –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á.

## –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ –æ–±—Å—É–∂–¥–µ–Ω–∏—è

GitHub Copilot –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –≤ Task Master. –ü–æ—Å–ª–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø–ª–∞–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ Copilot —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:

\`\`\`
–°–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ –Ω–∞—à–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
\`\`\`

–∏–ª–∏

\`\`\`
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∑–∞–¥–∞—á–∏ –∏–∑ –ø–ª–∞–Ω–∞
\`\`\`

**–í–∞–∂–Ω–æ!** –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π) –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π npm-—Å–∫—Ä–∏–ø—Ç:

\`\`\`
npm run task-master:complete <id>
\`\`\`

–ì–¥–µ <id> ‚Äî –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1 –∏–ª–∏ 1.2).

**–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å —Ñ–∞–π–ª tasks.json –≤—Ä—É—á–Ω—É—é!** –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—à–∏–±–∫–∞–º –∏ —Ä–∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–¥–∞—á.

–ë–æ–ª—å—à–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π ‚Äî –≤ –æ—Å–Ω–æ–≤–Ω–æ–º README –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.
`;
    fs.writeFileSync(copilotFile, content);
    console.log(chalk.green(`‚úì –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª COPILOT-INTEGRATION.md —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –¥–ª—è Copilot`));
  } else {
    console.log(chalk.yellow(`‚ö† –§–∞–π–ª COPILOT-INTEGRATION.md —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞`));
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function setupGlobalDir() {
  if (!fs.existsSync(globalTasksDir)) {
    fs.mkdirSync(globalTasksDir, { recursive: true });
    console.log(chalk.green(`‚úì –°–æ–∑–¥–∞–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è Task Master: ${globalTasksDir}`));
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function init() {
  console.log(chalk.blue('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Task Master...'));
  
  // –í—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –Ω—É–∂–¥
  setupGlobalDir();
  
  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ
  createTasksDir();
  createTasksFile();
  createCopilotIntegrationFile();
  
  console.log(chalk.green('\n‚úì Task Master –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ!'));
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –≥–ª–æ–±–∞–ª—å–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ
  if (isGlobalCommand) {
    console.log(chalk.blue('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:'));
    console.log('  task-master list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á');
    console.log('  task-master next - –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É');
    console.log('  task-master generate - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è');
    console.log('  task-master chat "–∫–æ–º–∞–Ω–¥–∞" - –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞');
  } else {
    console.log(chalk.blue('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:'));
    console.log('  npm run task-master:list - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á');
    console.log('  npm run task-master:next - –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É');
    console.log('  npm run task-master:generate - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è');
    console.log('  npm run task-master:chat "–∫–æ–º–∞–Ω–¥–∞" - –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Task Master
  showNewFeatures();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
function showNewFeatures() {
  console.log(chalk.yellow('\nüöÄ –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò TASK MASTER:'));
  console.log(chalk.cyan('1. –ü–∞–∫–µ—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á:'));
  console.log('   –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:');
  console.log('   "–°–æ–∑–¥–∞–π –∑–∞–¥–∞—á–∏ [–æ–ø–∏—Å–∞–Ω–∏–µ]" –∏–ª–∏ "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∑–∞–¥–∞—á–∏ [–æ–ø–∏—Å–∞–Ω–∏–µ]"');
  console.log('   –†–∞–∑–¥–µ–ª—è–π—Ç–µ –∑–∞–¥–∞—á–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ "###"');
  
  console.log(chalk.cyan('\n2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤:'));
  console.log('   –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –∑–∞–¥–∞—á —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–∫:');
  console.log('   [P:1] - –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç üî¥');
  console.log('   [P:2] - —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç üü°');
  console.log('   [P:3] - –Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç üü¢');
  
  console.log(chalk.cyan('\n3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ –ø–ª–∞–Ω–∞:'));
  console.log('   –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:');
  console.log('   "–°–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ –ø–ª–∞–Ω–∞" –∏–ª–∏ "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∑–∞–¥–∞—á–∏ –∏–∑ –Ω–∞—à–µ–≥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è"');
  
  console.log(chalk.cyan('\n4. –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:'));
  console.log('   Task Master —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ, –¥–æ—Å—Ç—É–ø–Ω—ã–π –∏–∑ –ª—é–±–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.');
  console.log('   –ü—Ä–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–∞:');
  console.log('   task-master [–∫–æ–º–∞–Ω–¥–∞] [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]');
  console.log('\n–í–≤–µ–¥–∏—Ç–µ "task-master help" –∏–ª–∏ "npm run task-master:chat "—Å–ø—Ä–∞–≤–∫–∞"" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.');
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
if (require.main === module) {
  init();
}

module.exports = { init };